{
  "name": "fobject",
  "version": "0.0.1",
  "description": "A simple promise-based wrapper for file operations that treats files as objects.",
  "main": "./lib",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/slang800/fobject.git"
  },
  "keywords": [
    "file",
    "object",
    "promise"
  ],
  "author": {
    "name": "Sean Lang",
    "email": "slang800@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/slang800/fobject/issues"
  },
  "homepage": "https://github.com/slang800/fobject",
  "devDependencies": {
    "mocha": "^1.18.2",
    "should": "^3.2.0",
    "coffee-script": "^1.7.1"
  },
  "dependencies": {
    "when": "^3.0.1"
  },
  "readme": "# fobject\n[![Build Status](https://travis-ci.org/slang800/fobject.svg?branch=master)](https://travis-ci.org/slang800/fobject)\n\nA simple promise-based wrapper for file operations that treats files as objects.\n\n```coffee\nFile = require 'fobject'\nconfigFile = new File('config.json')\nconfigFile.read().done((data) ->\n\tconsole.log \"contents of #{configFile.path}: #{data}\"\n)\n```\n\nAlso, this includes a 2nd wrapper that extends the first and lets you cache the contents of the file directly in the object\n\n```coffee\nFile = require 'fobject/cached'\nlogFile = new File('log')\nlogFile.load().then( ->\n  console.log logFile.content # print out the logs\n  logFile.content += 'this is a demo\\n' # add a line\n).then(\n  logFile.save\n).done( ->\n  console.log('the logs are saved, and since we only added to the string, the\n  `File.save()` call was optimized into a single `append()`')\n)\n```\n\n## docs\nRead the source code for now... it's all well annotated in JSDoc.\n",
  "readmeFilename": "README.md",
  "_id": "fobject@0.0.1",
  "_from": "fobject@0.x"
}
